<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>omai</groupId>
	<artifactId>test</artifactId>
	<name>Test Repository</name>
	<description>test dev tools using Word Count</description>
	<version>0.1-SNAPSHOT</version>

	<dependencies>
		<dependency>
			<groupId>org.scalaj</groupId>
			<artifactId>scalaj-http_2.10</artifactId>
			<version>2.2.1</version>
		</dependency>
		<!-- scala -->
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>

		<!-- hadoop client -->
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-client</artifactId>
			<version>${hadoop.version}</version>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- hbase client -->
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-client</artifactId>
			<version>${hbase.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-auth</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- hbase server -->
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-server</artifactId>
			<version>${hbase.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>servlet-api-2.5</artifactId>
					<groupId>org.mortbay.jetty</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- google -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<!-- spark -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_2.10</artifactId>
			<version>${spark.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-client</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_2.10</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-catalyst_2.10</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming_2.10</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming-kafka_2.10</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-mllib_2.10</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-hive_2.10</artifactId>
			<version>${spark.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>avro-mapred</artifactId>
					<groupId>org.apache.avro</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- parquet -->
		<dependency>
			<groupId>com.twitter</groupId>
			<artifactId>parquet-common</artifactId>
			<version>${parquet.version}</version>
		</dependency>
		<dependency>
			<groupId>com.twitter</groupId>
			<artifactId>parquet-encoding</artifactId>
			<version>${parquet.version}</version>
		</dependency>
		<dependency>
			<groupId>com.twitter</groupId>
			<artifactId>parquet-column</artifactId>
			<version>${parquet.version}</version>
		</dependency>
		<dependency>
			<groupId>com.twitter</groupId>
			<artifactId>parquet-hadoop</artifactId>
			<version>${parquet.version}</version>
		</dependency>
		<dependency>
			<groupId>com.twitter</groupId>
			<artifactId>parquet-avro</artifactId>
			<version>${parquet.version}</version>
		</dependency>

		<!-- avro -->
		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro</artifactId>
			<version>${avro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro-mapred</artifactId>
			<version>${avro.version}</version>
			<classifier>hadoop2</classifier>
			<exclusions>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>org.mortbay.jetty</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro-tools</artifactId>
			<version>${avro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro-compiler</artifactId>
			<version>${avro.version}</version>
		</dependency>

		<!-- kafka -->
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka_2.10</artifactId>
			<version>${kafka.version}</version>
		</dependency>

		<!-- joda time -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${jodatime.version}</version>
		</dependency>
		<!-- to get rid of "assertion failed: org.joda.convert.FromString" during
			compilation -->
		<dependency>
			<groupId>org.joda</groupId>
			<artifactId>joda-convert</artifactId>
			<version>1.8</version>
		</dependency>

		<!-- unit test -->
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_2.10</artifactId>
			<version>${scalatest.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- postgres -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgres.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- finagle -->
		<dependency>
			<groupId>com.twitter</groupId>
			<artifactId>finagle-http_2.10</artifactId>
			<version>6.31.0</version>
		</dependency>

		<!-- apache zookeeper -->
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>${zookeeper.version}</version>
			<exclusions>
			<exclusion>
				<artifactId>netty</artifactId>
				<groupId>io.netty</groupId>
			</exclusion>
			</exclusions>
		</dependency>

		<!-- apache curator - for service discovery stuffs -->
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-recipes</artifactId>
			<version>${curator.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-client</artifactId>
			<version>${curator.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-x-discovery</artifactId>
			<version>${curator.version}</version>
		</dependency>


	</dependencies>

	<build>
		<!-- <sourceDirectory>${project.basedir}/src/main/scala</sourceDirectory> -->
		<plugins>
			<!-- set to java 1.7 as default instead of 1.5 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- <version>3.8.1</version> -->
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>scala-compile-first</id>
						<phase>process-resources</phase>
						<goals>
							<goal>add-source</goal>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>scala-test-compile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<recompileMode>incremental</recompileMode>
					<args>
            <!--<arg>-deprecation</arg>
            <arg>-feature</arg>-->
          </args>
				</configuration>
			</plugin>

			<!-- assembly -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<descriptors>
						<descriptor>assembly/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<reportsDirectory>${project.build.directory}/unit-test-reports</reportsDirectory>
					<junitxml>.</junitxml>
					<filereports>unit-test.txt</filereports>
					<parallel>false</parallel>
				</configuration>
				<executions>
					<execution>
						<id>test</id>
						<goals>
							<goal>test</goal>
						</goals>

					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.avro
										</groupId>
										<artifactId>
											avro-maven-plugin
										</artifactId>
										<versionRange>
											[1.7.7,)
										</versionRange>
										<goals>
											<goal>schema</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

	<properties>
		<avro.version>1.7.7</avro.version>
		<curator.version>2.9.0</curator.version>
		<fasterxml.jackson.version>2.3.0</fasterxml.jackson.version>
		<guava.version>15.0</guava.version>
		<hadoop.version>2.7.1</hadoop.version>
 		<hbase.version>1.1.2</hbase.version>
		<jodatime.version>2.9.1</jodatime.version>
		<kafka.version>0.8.2.1</kafka.version>
		<parquet.version>1.6.0</parquet.version>
		<postgres.version>9.3-1100-jdbc41</postgres.version>
		<scala.version>2.10.5</scala.version>
		<scalatest.version>2.2.4</scalatest.version>
		<spark.version>1.6.2</spark.version>
		<zookeeper.version>3.4.6</zookeeper.version>
	</properties>
</project>
